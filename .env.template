# ⚠️  SECURITY TEMPLATE - DO NOT USE THESE VALUES IN PRODUCTION!
# Copy this file to .env and replace ALL values with secure credentials

# Server Configuration
PORT=3000
NODE_ENV=development

# Database Configuration (Choose one option)
# Option 1: Full connection string (recommended for cloud databases)
DATABASE_URL=postgresql://[username]:[password]@[hostname]:[port]/[database]?sslmode=require

# Option 2: Individual parameters (for local development)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=qr_checkin_dev
DB_USER=postgres
DB_PASSWORD=[your-secure-password]
DB_SSL=false

# Redis Configuration (optional - for caching)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=[your-redis-password-if-needed]

# JWT Configuration (CRITICAL - MUST CHANGE IN PRODUCTION)
JWT_SECRET=[generate-a-secure-random-string-min-32-characters]
JWT_EXPIRES_IN=24h

# QR Code Configuration (CRITICAL - MUST CHANGE IN PRODUCTION)
QR_ENCRYPTION_KEY=[generate-exactly-32-character-key]
QR_EXPIRATION_SECONDS=3600

# File Upload Configuration
UPLOAD_MAX_SIZE=5242880
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/webp

# CORS Configuration
CORS_ORIGIN=http://localhost:3000

# Security Notes:
# 1. Generate JWT_SECRET: openssl rand -base64 32
# 2. Generate QR_ENCRYPTION_KEY: openssl rand -hex 16
# 3. Use strong database passwords
# 4. Enable SSL in production
# 5. Restrict CORS_ORIGIN in production
